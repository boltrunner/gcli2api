name: Nightly Release

on:
  push:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build cross-platform binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Run tests
        run: go test ./...

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Setup Python and install dependencies
        run: |
          uv python install 3.12
          uv sync

      - name: Build binaries using Python script
        run: |
          uv run python scripts/release.py build-release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/*

  release:
    name: Create/Update nightly release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch all the history for changelog generation
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Setup Python and install dependencies
        run: |
          uv python install 3.12
          uv sync

      - name: Create or update release and upload assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          uv run python scripts/release.py upload-release

      - name: Compute short SHA
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: |
            boltrunner000/gcli2api:latest
            boltrunner000/gcli2api:${{ env.SHORT_SHA }}
